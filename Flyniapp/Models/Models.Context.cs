//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flyniapp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FLYNIDBEntities : DbContext
    {
        public FLYNIDBEntities()
            : base("name=FLYNIDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Airline> Airline { get; set; }
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<Flight> Flight { get; set; }
        public virtual DbSet<Flight_category> Flight_category { get; set; }
        public virtual DbSet<Flight_type> Flight_type { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int sp_addAirline(string airline_name)
        {
            var airline_nameParameter = airline_name != null ?
                new ObjectParameter("airline_name", airline_name) :
                new ObjectParameter("airline_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addAirline", airline_nameParameter);
        }
    
        public virtual int sp_addCity(string city_name)
        {
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addCity", city_nameParameter);
        }
    
        public virtual int sp_addFlight(Nullable<int> id_flight_type, string airline_name, Nullable<int> flight_number, string city_name, Nullable<System.TimeSpan> time_dep_arri, string status_name)
        {
            var id_flight_typeParameter = id_flight_type.HasValue ?
                new ObjectParameter("id_flight_type", id_flight_type) :
                new ObjectParameter("id_flight_type", typeof(int));
    
            var airline_nameParameter = airline_name != null ?
                new ObjectParameter("airline_name", airline_name) :
                new ObjectParameter("airline_name", typeof(string));
    
            var flight_numberParameter = flight_number.HasValue ?
                new ObjectParameter("flight_number", flight_number) :
                new ObjectParameter("flight_number", typeof(int));
    
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            var time_dep_arriParameter = time_dep_arri.HasValue ?
                new ObjectParameter("time_dep_arri", time_dep_arri) :
                new ObjectParameter("time_dep_arri", typeof(System.TimeSpan));
    
            var status_nameParameter = status_name != null ?
                new ObjectParameter("status_name", status_name) :
                new ObjectParameter("status_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addFlight", id_flight_typeParameter, airline_nameParameter, flight_numberParameter, city_nameParameter, time_dep_arriParameter, status_nameParameter);
        }
    
        public virtual int sp_addStatus(string status_name)
        {
            var status_nameParameter = status_name != null ?
                new ObjectParameter("status_name", status_name) :
                new ObjectParameter("status_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addStatus", status_nameParameter);
        }
    
        public virtual ObjectResult<sp_getAllFlight_Result> sp_getAllFlight(Nullable<int> id_flight_type)
        {
            var id_flight_typeParameter = id_flight_type.HasValue ?
                new ObjectParameter("id_flight_type", id_flight_type) :
                new ObjectParameter("id_flight_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllFlight_Result>("sp_getAllFlight", id_flight_typeParameter);
        }
    
        public virtual ObjectResult<sp_getFlight_Result> sp_getFlight(Nullable<int> id_reg_db)
        {
            var id_reg_dbParameter = id_reg_db.HasValue ?
                new ObjectParameter("id_reg_db", id_reg_db) :
                new ObjectParameter("id_reg_db", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFlight_Result>("sp_getFlight", id_reg_dbParameter);
        }
    
        public virtual int sp_setFlight(Nullable<int> id_flight_type, string city_name, Nullable<int> flight_number, Nullable<System.TimeSpan> time_dep_arri, string status_name)
        {
            var id_flight_typeParameter = id_flight_type.HasValue ?
                new ObjectParameter("id_flight_type", id_flight_type) :
                new ObjectParameter("id_flight_type", typeof(int));
    
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            var flight_numberParameter = flight_number.HasValue ?
                new ObjectParameter("flight_number", flight_number) :
                new ObjectParameter("flight_number", typeof(int));
    
            var time_dep_arriParameter = time_dep_arri.HasValue ?
                new ObjectParameter("time_dep_arri", time_dep_arri) :
                new ObjectParameter("time_dep_arri", typeof(System.TimeSpan));
    
            var status_nameParameter = status_name != null ?
                new ObjectParameter("status_name", status_name) :
                new ObjectParameter("status_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_setFlight", id_flight_typeParameter, city_nameParameter, flight_numberParameter, time_dep_arriParameter, status_nameParameter);
        }
    }
}
